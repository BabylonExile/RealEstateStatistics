import numpy as np
import matplotlib.pyplot as plt
import csv

# Открываем файл с данными и создаем двумерный список с целочисленными элементами на его основе
with open('flat_price.csv', 'r') as csvFile:
    reader = csv.reader(csvFile, delimiter=';', quoting=csv.QUOTE_NONNUMERIC)
    data = [list(map(int, i)) for i in reader]

##################################################################
#  Вывод информации на экран в удобном формате
##################################################################

##################################################################
#  Определение какие квартиры подорожали сильнее всего
##################################################################


##################################################################
#  Построение графиков
##################################################################

# Выделяем срез данных для годов (ось X)
years = data[0][1:]
# Вырезаем цены
prices = [line[:0] + line[1:] for line in data[1:]]
# Берем данные для легенды из первого столбца
flat_types = [line[0] for line in data[1:]]
flat_types = [str(f) + "-к кв." for f in flat_types]
# Конвертируем формат данных для построения графиков
y = np.asarray(prices)
# Устанавливаем размер окна по умолчанию
plt.rcParams["figure.figsize"] = (10, 6)
# Устанавливаем текст заголовка окна
plt.figure('Цены на рынке первичного жилья в России')
# Передаем данные для построения графиков
plt.plot(years, y.T, linewidth=3)
# Отменяем экспоненциальный вывод больших чисел для осей
plt.ticklabel_format(style='plain')
# Добавляем подпись оси Y
plt.ylabel('Цена в руб.')
# Принудительно устанавливаем засечки
plt.xticks(years)
# Уменьшаем размер блока графиков, чтобы вместилась легенда
plt.tight_layout(rect=[0, 0.1, 1, 1])
# Настройка вывода легенды под графиками
plt.legend(flat_types, fancybox=True, shadow=True, ncol=4, loc='lower center', bbox_to_anchor=(0.5, -0.17))
plt.show()
